#EXTENSION(UltimateDebugGlobal, 'UltimateDebug (Global Extension)'),APPLICATION(ProcedureInfoExtension)
#PREPARE
  #INSERT(%CalcFamily, %CLSkelFamily)
#ENDPREPARE
#BOXED('Information')
#INSERT(%CopyrightInfo)
#ENDBOXED
#DISPLAY
#SHEET,HSCROLL
#TAB('General')
  #DISPLAY
  #PROMPT('Global Class:',@S40),%CLSkelClass,AT(90,,95,10),REQ,DEFAULT('UD')
  #PROMPT('Multi DLL',CHECK),%CLSkelMultiDLL,AT(90),DEFAULT(0)
  #ENABLE(%CLSkelMultiDLL=1),ClEAR
    #PROMPT('Declaration:',DROP('Declared in another App[0]|Declared in this app[1]')),%CLSkelMultiDLLData,DEFAULT(0),AT(90,,95,10)
  #ENDENABLE
  #PROMPT('Prefix:',@S20),%CLDebugPrefix,DEFAULT('!')
  #PROMPT('Log File Name:',@S120),%CLLogFileName,DEFAULT('DebugLog.txt') 
  #INSERT(%TabCopyright)
#ENDTAB  
#INSERT(%TabProcedureInfo)
#INSERT(%TabDefaults)
#INSERT(%TabInstructions)
#INSERT(%TabContributors)
#INSERT(%TabClarionVer)
#ENDSHEET
#DISPLAY
#DISPLAY
#PROMPT('Disable template',CHECK),%CLSkelAppDisable,AT(10),DEFAULT(0)

#ATSTART          
  #DECLARE(%ThisApplicationExtension)
  #DECLARE(%CLSkelDataExternal)
  #IF(%CLSkelMultiDLL=1 AND %CLSkelMultiDLLData=0)
    #SET(%CLSkelDataExternal,',EXTERNAL,DLL(dll_mode)')
  #ENDIF
#ENDAT

#AT(%AfterGlobalIncludes),WHERE(~%CLSkelAppDisable)
  INCLUDE('UltimateDebug.INC'),ONCE
#ENDAT

#AT(%CustomGlobalDeclarations),WHERE(~%CLSkelAppDisable)
  #INSERT(%CalcFamily, %CLSkelFamily)
  #IF(%CLSkelFamily='LEGACY')
  #PROJECT('UltimateDebug.CLW')
  #ENDIF
#ENDAT

#AT(%GlobalData),WHERE(~%CLSkelAppDisable)
CLSkel_TplVersion    CSTRING('v%CLSkelTPLVersion')%CLSkelDataExternal
%CLSkelClass         CLASS(UltimateDebug)%CLSkelDataExternal
                     END
#ENDAT

#AT(%DLLExportList),WHERE(%CLSkelMultiDLL=1 AND %CLSkelMultiDLLData=1 AND ~%CLSkelAppDisable)
  $CLSkel_TplVersion  @?
  $%CLSkelClass       @?
#ENDAT

#AT(%ProgramSetup),WHERE(~%CLSkelAppDisable)
%CLSkelClass.Init()
%CLSkelClass.DebugPrefix = '%CLDebugPrefix'
%CLSkelClass.ASCIIFileName = '%CLLogFileName' 
%CLSkelClass.ProcAlertKey = %UDProcAlert
#ENDAT

#AT(%ProgramEnd),WHERE(~%CLSkelAppDisable)
  %CLSkelClass.Kill()
#ENDAT
#!-------------------------------------------------
#EXTENSION(UltimateDebugEvent, 'UltimateDebug DebugEvent Support'), WINDOW
#Display('Ultimate Debug Event Template') 
#PROMPT('Use Global Settings',CHECK),%UseGlobalDefaults,Default(%True)
#ENABLE(NOT %UseGlobalDefaults)
#PROMPT('Show All',CHECK),%ShowAll,DEFAULT(%True),AT(10)  
#DISPLAY('')
#ENABLE(NOT %Showall)
#PROMPT('ShowField',CHECK),%ShowField,AT(10,,90),Default(%GlobalShowField)
#PROMPT('ShowFocus',CHECK),%ShowFocus,Default(%GlobalShowFocus)
#PROMPT('ShowSelected',CHECK),%ShowSelected,AT(10,,90),Default(%GlobalShowSelected)
#PROMPT('ShowSelStart',CHECK),%ShowSelStart,Default(%GlobalShowSelStart)
#PROMPT('ShowSelEnd',CHECK),%ShowSelEnd,AT(10,,90),Default(%GlobalShowSelEnd)
#PROMPT('ShowKeyCode',CHECK),%ShowKeyCode,Default(%GlobalShowKeyCode)
#PROMPT('ShowError',CHECK),%ShowError,AT(10,,90),Default(%GlobalShowError)
#PROMPT('ShowThread',CHECK),%ShowThread,Default(%GlobalShowThread)
#PROMPT('ShowContents',CHECK),%ShowContents,AT(10,,90),Default(%GlobalShowContents)
#PROMPT('ShowScreenText',CHECK),%ShowScreenText,Default(%GlobalShowScreenText)
#PROMPT('ShowAcceptAll',CHECK),%ShowAcceptAll,AT(10,,90),Default(%GlobalShowAcceptAll)
#ENDENABLE
#ENDENABLE
#AT(%WindowManagerMethodCodeSection, 'TakeEvent', '(),BYTE'),Description(%ActiveTemplateInstanceDescription),Priority(1000)
 #INSERT(%DebugEventGroup)
#ENDAT
#AT(%AcceptLoopBeforeEventHandling),Priority(1)
 #INSERT(%DebugEventGroup)
#ENDAT
#CODE(TemplateEmbedFinder,'Template Embed Finder')
!%EmbedDescription
  #IF(%EmbedParameters)
 !AT(%EmbedID, %EmbedParameters)
  #ELSE
 !AT(%EmbedID)
  #ENDIF
#!-------------------------------------------------
#EXTENSION(ProcedureInfoExtension,'Procedure Info Extension Template'),PROCEDURE
#BOXED  ('')
#DISPLAY('Procedure Info  Extension Template')
#DISPLAY('This Template generates code to display Procedure Information.')
#PROMPT('Disable',CHECK),%DoNotShowDebugInfo
#DISPLAY('')
#ENDBOXED 
!-------------------
#AT(%AfterWindowOpening),FIRST 
#IF (%Window <> '')
%Window{Prop:Alrt,255} = %UDProcAlert   
#ENDIF
#ENDAT         
#AT(%AcceptLoopBeforeEventHandling)   
#IF ((%ProcedureTemplate <> 'Report') AND (%ProcedureTemplate <> 'UnivProcess') AND (%ProcedureTemplate <> 'UnivReport') AND (%ProcedureTemplate <> 'UnivAbcReport') AND (%ProcedureTemplate <> 'QueueProcess') AND (%ProcedureTemplate <> 'ProcessQueue') AND (%ProcedureTemplate <> 'Process')AND (%ProcedureTemplate <> 'Source'))  
   IF KEYCODE()=%UDProcAlert AND EVENT() = Event:PreAlertKey
      CYCLE
   END
   IF KEYCODE()=%UDProcAlert  
      #INSERT(%ShowTheProcedureInfo)
      CYCLE
   END
#ENDIF
#ENDAT 
#AT(%ProcedureSetup),PRIORITY(1)  
#IF(%DoNotShowDebugInfo = 0)
IF %CLSkelClass.ProcedureInfoToDebugView    
      %CLSkelClass.Debug('Entering: ' & FORMAT('%Procedure',@S30) & FORMAT(%CLSkelClass.SetShortApplicationName('%Application','%ProgramExtension'),@S20) & ' Last Modified: ' & '%@D02@ProcedureDateChanged @ %@T03@ProcedureTimeChanged') 
END
#ENDIF
#IF ((%ProcedureTemplate <> 'Report') AND (%ProcedureTemplate <> 'UnivProcess') AND (%ProcedureTemplate <> 'UnivReport') AND (%ProcedureTemplate <> 'UnivAbcReport') AND (%ProcedureTemplate <> 'QueueProcess') AND (%ProcedureTemplate <> 'ProcessQueue') AND (%ProcedureTemplate <> 'Process')AND (%ProcedureTemplate <> 'Source'))
#ELSE    
   IF BAND(Keystate(),%UDKeyState) 
      #INSERT(%ShowTheProcedureInfo)
   END
#ENDIF
#ENDAT
#AT(%ProcessedCode),PRIORITY(1) 
#IF(%DoNotShowDebugInfo = 0)
IF %CLSkelClass.ProcedureInfoToDebugView    
      %CLSkelClass.Debug('Entering: ' & FORMAT('%Procedure',@S30) & FORMAT(%CLSkelClass.SetShortApplicationName('%Application','%ProgramExtension'),@S20) & ' Last Modified: ' & '%@D02@ProcedureDateChanged @ %@T03@ProcedureTimeChanged') 
END
#ENDIF
#ENDAT 
#AT(%ProcessedCode),PRIORITY(9999) 
#IF(%DoNotShowDebugInfo = 0)
IF %CLSkelClass.ProcedureInfoToDebugView    
      %CLSkelClass.Debug('Leaving: ' & FORMAT('%Procedure',@S30) & FORMAT(%CLSkelClass.SetShortApplicationName('%Application','%ProgramExtension'),@S20) & ' Last Modified: ' & '%@D02@ProcedureDateChanged @ %@T03@ProcedureTimeChanged') 
END
#ENDIF
#ENDAT
#!------------------------------------------------- 
#GROUP(%ShowTheProcedureInfo)   
  #IF (%Window <> '')
    %CLSkelClass.ShowProcedureInfo('%Procedure',%CLSkelClass.SetApplicationName('%Application','%ProgramExtension'),%Window{PROP:Hlp},'%@D02@ProcedureDateCreated @ %@T03@ProcedureTimeCreated','%@D02@ProcedureDateChanged @ %@T03@ProcedureTimeChanged','%(FORMAT(TODAY(),@D02)) @ %(FORMAT(CLOCK(),@T03))')  
  #ELSE
    %CLSkelClass.ShowProcedureInfo('%Procedure',%CLSkelClass.SetApplicationName('%Application','%ProgramExtension'),'None','%@D02@ProcedureDateCreated @ %@T03@ProcedureTimeCreated','%@D02@ProcedureDateChanged @ %@T03@ProcedureTimeChanged','%(FORMAT(TODAY(),@D02)) @ %(FORMAT(CLOCK(),@T03))')  
  #ENDIF
#!-------------------------------------------------   
#GROUP(%InsertedStart)
#!
#GROUP(%InsertedEnd)
!-----------------
!SystemIdle : End
!-----------------
#!   
#GROUP(%TabProcedureInfo) 
#TAB('Proc Info')
#PROMPT ('Activate Procedure Info',CHECK),%UDProcInfo,DEFAULT(1)
#ENABLE(%UDProcInfo)
#PROMPT ('Alert Key:',KEYCODE),%UDProcAlert,DEFAULT('CtrlShiftP') 
#PROMPT ('Report Keystate:',@S200),%UDKeyState,DEFAULT('udKeyState:Shift')
#DISPLAY('Available Keystates are:')
#DISPLAY('udKeyState:Shift')                         
#DISPLAY('udKeyState:Ctrl')                          
#DISPLAY('udKeyState:Alt') 
#DISPLAY('')
#DISPLAY('You can use combinations by adding them.')
#DISPLAY('Example:')
#DISPLAY('udKeyState:Shift + udKeyState:Ctrl')   
#DISPLAY('')
#DISPLAY('For continuous display of Procedure Info in your')                       
#DISPLAY('DebugView window set Property: ')
#DISPLAY('    ProcedureInfoToDebugView = TRUE')                       
#ENDENABLE  
#ENDTAB
#!   
#GROUP(%TabDefaults) 
#TAB('Defaults')
#PROMPT('Show All',CHECK),%GlobalShowAll,DEFAULT(%True),AT(10)  
#DISPLAY('')
#ENABLE(NOT %GlobalShowAll)
#PROMPT('ShowField',CHECK),%GlobalShowField,AT(10,,90)
#PROMPT('ShowFocus',CHECK),%GlobalShowFocus
#PROMPT('ShowSelected',CHECK),%GlobalShowSelected,AT(10,,90)
#PROMPT('ShowSelStart',CHECK),%GlobalShowSelStart
#PROMPT('ShowSelEnd',CHECK),%GlobalShowSelEnd,AT(10,,90)
#PROMPT('ShowKeyCode',CHECK),%GlobalShowKeyCode
#PROMPT('ShowError',CHECK),%GlobalShowError,AT(10,,90)
#PROMPT('ShowThread',CHECK),%GlobalShowThread
#PROMPT('ShowContents',CHECK),%GlobalShowContents,AT(10,,90)
#PROMPT('ShowScreenText',CHECK),%GlobalShowScreenText
#PROMPT('ShowAcceptAll',CHECK),%GlobalShowAcceptAll,AT(10,,90)
#ENDENABLE 
#ENDTAB
#GROUP(%TabInstructions) 
#TAB('Instructions')
  #DISPLAY('UltimateDebug'),AT(10,0),PROP(PROP:FontStyle,700),PROP(PROP:FontName,'Tahoma')
  #DISPLAY('Class Calls:' )
  #DISPLAY('ud.debug(string)')
  #DISPLAY(' Displays the contents of the string in the Debug Window.')
  #DISPLAY('  ex: ud.debug(<39>Show In Debug Window<39>)')
  #DISPLAY('')
  #DISPLAY('ud.debugqueue(queue,<String>')
  #DISPLAY(' Displays contents of a Queue')
  #DISPLAY('  ex: ud.debugqueue(myQ,<39>This is my Queue<39>)')
  #DISPLAY('')
  #DISPLAY('ud.debugevent(')
  #DISPLAY(' Displays events as they happen in the Debug Window.')  
  #DISPLAY('  Place code in TakeEvent embed.')
  #DISPLAY('  ex: ud.debugevent()')
  #DISPLAY('')
  #DISPLAY('ud.debugclear()')
  #DISPLAY(' Clears the Debug Window.')
  #DISPLAY('')
  #DISPLAY('See example app for more information.')
  #DISPLAY('')
  #DISPLAY('')         
#ENDTAB
#!
#GROUP(%DebugEventGroup)
  #IF(%UseGlobalDefaults) 
  %CLSkelClass.ShowAll        = %GlobalShowAll  
  %CLSkelClass.ShowField      = %GlobalShowField
  %CLSkelClass.ShowFocus      = %GlobalShowFocus
  %CLSkelClass.ShowSelected   = %GlobalShowSelected
  %CLSkelClass.ShowSelStart   = %GlobalShowSelStart
  %CLSkelClass.ShowSelEnd     = %GlobalShowSelEnd
  %CLSkelClass.ShowKeyCode    = %GlobalShowKeyCode
  %CLSkelClass.ShowError      = %GlobalShowError
  %CLSkelClass.ShowThread     = %GlobalShowThread
  %CLSkelClass.ShowContents   = %GlobalShowContents
  %CLSkelClass.ShowScreenText = %GlobalShowScreenText
  %CLSkelClass.ShowAcceptAll  = %GlobalShowAcceptAll
  #ELSE
  %CLSkelClass.ShowAll        = %ShowAll  
  %CLSkelClass.ShowField      = %ShowField
  %CLSkelClass.ShowFocus      = %ShowFocus
  %CLSkelClass.ShowSelected   = %ShowSelected
  %CLSkelClass.ShowSelStart   = %ShowSelStart
  %CLSkelClass.ShowSelEnd     = %ShowSelEnd
  %CLSkelClass.ShowKeyCode    = %ShowKeyCode
  %CLSkelClass.ShowError      = %ShowError
  %CLSkelClass.ShowThread     = %ShowThread
  %CLSkelClass.ShowContents   = %ShowContents
  %CLSkelClass.ShowScreenText = %ShowScreenText
  %CLSkelClass.ShowAcceptAll  = %ShowAcceptAll
  #ENDIF    
  %CLSkelClass.DebugEvent('%Procedure')
#!
#GROUP(%TabCopyright)
#BOXED,SECTION,AT(0,23,240,42)
  #DISPLAY('UltimateDebug'),AT(10,0),PROP(PROP:FontStyle,700),PROP(PROP:FontName,'Tahoma')
  #DISPLAY('Version ' & %CLSkelTPLVersion),AT(10,10),PROP(PROP:FontStyle,700),PROP(PROP:FontName,'Tahoma')
  #DISPLAY('http://www.clarionlive.com'),AT(10,30)
  #DISPLAY('')
#ENDBOXED
#!
#!
#GROUP(%TabContributors)
#TAB('Contributors')
  #DISPLAY
  #DISPLAY('Arnold Young + John Hickey = Clarion Live')
  #DISPLAY('http://www.clarionlive.com')
  #DISPLAY
  #DISPLAY('Andy Wilton - Noyantis Software')
  #DISPLAY('http://www.noyantis.com')   
  #DISPLAY
  #DISPLAY('Mike Hanson - BoxSoft')
  #DISPLAY('http://www.boxsoft.net')
  #DISPLAY
  #DISPLAY('Mark Goldberg')
  #DISPLAY('Contributing DebugEvent')
  #DISPLAY
#ENDTAB
#!
#!
#GROUP(%TabClarionVer)
#TAB('Template Set')
  #DISPLAY
  #DISPLAY('Current Template Set being used by this app.')
  #DISPLAY
  #DISPLAY('This will be set automatically for you once a compile has')
  #DISPLAY('been performed.')
  #DISPLAY
  #ENABLE(%False)
    #PROMPT('Template Set:',@S10),%CLSkelFamily,Default(''),AT(90,,95,10)
  #ENDENABLE
  #DISPLAY
#ENDTAB
#!
#!
#GROUP(%TabOOP)
#TAB('OOP'),WHERE(%False)
  #BOXED('Default prompts'),AT(0,0),WHERE(%False),HIDE
  #INSERT(%OOPHiddenPrompts(ABC))
  #ENDBOXED
#ENDTAB
#!
#!
#GROUP(%TabClassesABC, %CLSkelFamily)
#TAB('&Classes'),WHERE(%CLSkelFamily='ABC')
  #WITH(%ClassItem, 'Default')
    #INSERT(%ClassPrompts(ABC))
  #ENDWITH
#ENDTAB
#!
#!
#GROUP(%TabClassesLEGACY, %CLSkelFamily)
#TAB('&Classes'),WHERE(%CLSkelFamily='LEGACY')
  #BOXED('')
    #PROMPT('Object:',@S40),%ObjectID,AT(65,,115,10)
  #ENDBOXED
#ENDTAB
#!
#!
#GROUP(%WndInit)
#INSERT(%InsertedStart)
%CLSkelObj.Init()
#INSERT(%InsertedEnd)
#!
#!
#GROUP(%Wnd)
#INSERT(%InsertedStart)
  %CLSkelObj.Kill()
#INSERT(%InsertedEnd)
#!
#!
#GROUP(%CalcFamily, * %CLSkelFamily)
#IF(VarExists(%AppTemplateFamily))
  #IF(%AppTemplateFamily='CLARION')
    #SET(%CLSkelFamily,'LEGACY')
  #ELSE
    #SET(%CLSkelFamily,'ABC')
  #ENDIF
#ELSIF(VarExists(%cwtemplateversion))
  #IF(%cwtemplateversion = 'v5.5')
    #IF(VarExists(%ABCVersion))
      #SET(%CLSkelFamily,'ABC')
    #ELSE
      #SET(%CLSkelFamily,'LEGACY')
    #ENDIF
  #ELSE
    #IF(%cwtemplateversion = 'v2.003')
      #SET(%CLSkelFamily,'LEGACY')
    #ELSE
      #SET(%CLSkelFamily,'ABC')
    #ENDIF
  #ENDIF
#ENDIF
